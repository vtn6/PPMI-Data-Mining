head(ppmi.raw.data.csv)
ppmi.raw.data = ppmi.raw.data[ppmi.raw.data$RECRUITMENT_CAT == 'PD' & ppmi.raw.data$EVENT == 'SC' ,]
ppmi.raw.data = ppmi.raw.data[ppmi.raw.data$RECRUITMENT_CAT == 'PD' & ppmi.raw.data$EVENT_ID == 'SC' ,]
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/lols.R')
#Apply PCA to UPDRS Part 3 Motor Data AND Imaging Data
rm(list = ls())
library(ggplot2)
library(gplots)
library(rgl)
library(lattice)
library(sjPlot)
setwd("~/Dropbox//ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/")
ppmi.raw.data.csv = read.csv("NMIB_ByVisits.csv") #use average values
ppmi.raw.data = ppmi.raw.data.csv
#adding ratio data
t.tau.Abeta.42.ratio = ppmi.raw.data$Total.tau/ppmi.raw.data$Abeta.42
p.tau.Abeta.42.ratio = ppmi.raw.data$p.Tau181P/ppmi.raw.data$Abeta.42
p.tau.t.tau.ratio = ppmi.raw.data$p.Tau181P/ppmi.raw.data$Total.tau
ppmi.raw.data = data.frame(ppmi.raw.data,
t.tau.Abeta.42.ratio,
p.tau.Abeta.42.ratio,
p.tau.t.tau.ratio)
#selecting PD patients
ppmi.raw.data = ppmi.raw.data[ppmi.raw.data$RECRUITMENT_CAT == 'PD' & ppmi.raw.data$EVENT_ID == 'SC' ,]
# #assuming that all UPDRSPart3 data is in the columns between NP3SPCH and NUPDRS_TOT
# ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
#                                         c(which(names(ppmi.raw.data) %in% "NP3SPCH"):which(names(ppmi.raw.data) %in% "NUPDRS_TOT"))]
#assuming that all UPDRSPart3 data is in the columns between NP3SPCH and NUPDRS_TOT
ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
c(which(names(ppmi.raw.data) %in% "NP3SPCH"):which(names(ppmi.raw.data) %in% "NP3RTCON"))]
# Adding bio data ---------------------------------------------------------
ppmi.biospecimen.imaging.data = subset.data.frame(ppmi.raw.data, select = c(CAUDATE_R,
CAUDATE_L,
PUTAMEN_R,
PUTAMEN_L,
CAUDATE_ASYMMETRY,
PUTAMEN_ASYMMETRY))
# ppmi.biospecimen.imaging.data = subset.data.frame(ppmi.raw.data, select = c(CAUDATE_R,
#                                                                             CAUDATE_L,
#                                                                             PUTAMEN_R,
#                                                                             PUTAMEN_L,
#                                                                             CAUDATE_ASYMMETRY,
#                                                                             PUTAMEN_ASYMMETRY,
#                                                                             Abeta.42,
#                                                                             p.Tau181P,
#                                                                             Total.tau,
#                                                                             CSF.Alpha.synuclein,
#                                                                             t.tau.Abeta.42.ratio,
#                                                                             p.tau.Abeta.42.ratio,
#                                                                             p.tau.t.tau.ratio))
ppmi.NUPDRS3.Biospecimen.Imaging.data = data.frame(ppmi.motor.NUPDRS3.data,
ppmi.biospecimen.imaging.data)
foo = prcomp(ppmi.NUPDRS3.Biospecimen.Imaging.data)
foo$rotation[,(1:3)]
head(ppmi.biospecimen.imaging.data)
head(ppmi.NUPDRS3.Biospecimen.Imaging.data)
ppmi.NUPDRS3.Biospecimen.Imaging.pca = prcomp(ppmi.NUPDRS3.Biospecimen.Imaging.data,scale = TRUE)
head(ppmi.raw.data.csv)
head(ppmi.biospecimen.imaging.data)
ppmi.NUPDRS3.Biospecimen.Imaging.pca = prcomp(ppmi.NUPDRS3.Biospecimen.Imaging.data,scale = TRUE)
ppmi.NUPDRS3.Biospecimen.Imaging.pca$rotation[,(1:2)]
ppmi.motor.NUPDRS3.data
hames(ppmi.motor.NUPDRS3.data)
names(ppmi.motor.NUPDRS3.data)
NP3FieldNames = names(ppmi.raw.data)[substr(names(ppmi.raw.data),1,3) == 'NP3']
rm(list = ls())
library(ggplot2)
library(gplots)
library(rgl)
library(lattice)
library(sjPlot)
setwd("C://Users/cit-labs/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/")
#setwd("~/Dropbox//ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/")
ppmi.raw.data.csv = read.csv("NMIB_ByVisits.csv") #use average values
ppmi.raw.data = ppmi.raw.data.csv
#adding ratio data
t.tau.Abeta.42.ratio = ppmi.raw.data$Total.tau/ppmi.raw.data$Abeta.42
p.tau.Abeta.42.ratio = ppmi.raw.data$p.Tau181P/ppmi.raw.data$Abeta.42
p.tau.t.tau.ratio = ppmi.raw.data$p.Tau181P/ppmi.raw.data$Total.tau
ppmi.raw.data = data.frame(ppmi.raw.data,
t.tau.Abeta.42.ratio,
p.tau.Abeta.42.ratio,
p.tau.t.tau.ratio)
#selecting PD patients
ppmi.raw.data = ppmi.raw.data[ppmi.raw.data$RECRUITMENT_CAT == 'PD' & ppmi.raw.data$EVENT_ID == 'SC' ,]
# #assuming that all UPDRSPart3 data is in the columns between NP3SPCH and NUPDRS_TOT
# ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
#                                         c(which(names(ppmi.raw.data) %in% "NP3SPCH"):which(names(ppmi.raw.data) %in% "NUPDRS_TOT"))]
#assuming that all UPDRSPart3 data is in the columns between NP3SPCH and NUPDRS_TOT
NP3FieldNames = names(ppmi.raw.data)[substr(names(ppmi.raw.data),1,3) == 'NP3']
# ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
#                                         c(which(names(ppmi.raw.data) %in% "NP3SPCH"):which(names(ppmi.raw.data) %in% "NP3RTCON"))]
ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
NP3FieldNames]
# Adding bio data ---------------------------------------------------------
ppmi.biospecimen.imaging.data = subset.data.frame(ppmi.raw.data, select = c(CAUDATE_R,
CAUDATE_L,
PUTAMEN_R,
PUTAMEN_L,
CAUDATE_ASYMMETRY,
PUTAMEN_ASYMMETRY))
# ppmi.biospecimen.imaging.data = subset.data.frame(ppmi.raw.data, select = c(CAUDATE_R,
#                                                                             CAUDATE_L,
#                                                                             PUTAMEN_R,
#                                                                             PUTAMEN_L,
#                                                                             CAUDATE_ASYMMETRY,
#                                                                             PUTAMEN_ASYMMETRY,
#                                                                             Abeta.42,
#                                                                             p.Tau181P,
#                                                                             Total.tau,
#                                                                             CSF.Alpha.synuclein,
#                                                                             t.tau.Abeta.42.ratio,
#                                                                             p.tau.Abeta.42.ratio,
#                                                                             p.tau.t.tau.ratio))
ppmi.NUPDRS3.Biospecimen.Imaging.data = data.frame(ppmi.motor.NUPDRS3.data,
ppmi.biospecimen.imaging.data)
# Performing PCA ----------------------------------------------------------
ppmi.NUPDRS3.Biospecimen.Imaging.pca = prcomp(ppmi.NUPDRS3.Biospecimen.Imaging.data,scale = TRUE)
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/lols.R')
ppmi.NUPDRS3.Biospecimen.Imaging.pca$rotation[,c(1:#)]
ppmi.NUPDRS3.Biospecimen.Imaging.pca$rotation[,c(1:3)]
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/lols.R')
likert_4 <- data.frame(sample(1:4, 500, replace=T, prob=c(0.2,0.3,0.1,0.4)),
sample(1:4, 500, replace=T, prob=c(0.5,0.25,0.15,0.1)),
sample(1:4, 500, replace=T, prob=c(0.4,0.15,0.25,0.2)),
sample(1:4, 500, replace=T, prob=c(0.25,0.1,0.4,0.25)),
sample(1:4, 500, replace=T, prob=c(0.1,0.4,0.4,0.1)),
sample(1:4, 500, replace=T,),
sample(1:4, 500, replace=T, prob=c(0.35,0.25,0.15,0.25)))
colnames(likert_4) <- c("V1", "V2", "V3", "V4", "V5", "V6", "V7")
head(likert_4)
pca <- prcomp(na.omit(likert_4), retx=TRUE, center=TRUE, scale.=TRUE)
sjp.pca(pca, plotEigenvalues=TRUE, type="circle")
pca$rotation[,1]
pca <- prcomp(na.omit(likert_4), retx=TRUE, center=TRUE, scale.=TRUE)
sjp.pca(pca, plotEigenvalues=TRUE, type="circle")
likert_4 <- data.frame(sample(1:4, 500, replace=T, prob=c(0.2,0.3,0.1,0.4)),
sample(1:4, 500, replace=T, prob=c(0.5,0.25,0.15,0.1)),
sample(1:4, 500, replace=T, prob=c(0.4,0.15,0.25,0.2)),
sample(1:4, 500, replace=T, prob=c(0.25,0.1,0.4,0.25)),
sample(1:4, 500, replace=T, prob=c(0.1,0.4,0.4,0.1)),
sample(1:4, 500, replace=T,),
sample(1:4, 500, replace=T, prob=c(0.35,0.25,0.15,0.25)))
colnames(likert_4) <- c("V1", "V2", "V3", "V4", "V5", "V6", "V7")
sjp.pca(likert_4)
pca <- prcomp(na.omit(likert_4), retx=TRUE, center=TRUE, scale.=TRUE)
sjp.pca(pca, plotEigenvalues=TRUE, type="circle")
pca$rotation[,1]
pca$rotation[,1]
pca$rotation[,c(1:3)]
pca$sdev[,c(1:3)]
pca$sdev[,1]
pca$sdev
pca$scale
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/lols.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/lols.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/lols.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/lols.R')
heatmap(ppmi.NUPDRS3.Biospecimen.Imaging.pca$rotation[,c(1:5)])
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/lols.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/lols.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/lols.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/lols.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/lols.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Biospecimen_Imaging_Clustering/BiospecimenPCA.R')
ppmi.biospec.imaging.PCA$rotation[,1]
ppmi.biospec.imaging.PCA$rotation[,1]
foo = ppmi.biospec.imaging.PCA$rotation[,1]
foo^2
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Biospecimen_Imaging_Clustering/BiospecimenPCA.R')
#apply PCA Clustering to Biospecimen, Imaging
#Think in terms of a basis function for parkinson's disease
#This code shows that parkinson's patients can be mostly described by the asymmetry of their striatal region and the values of their abeta 42
#and alpha synuclein. In particular the basis function looks like this:
#(asymmetry, Abeta 42/Alphasynuclein), (asymmetry,-Abeta42/alphasynuclein)
#in other words, based on PC2 and PC2, there are 4 kinds of patient biospecimen profiles
#From PC2
##Those with high asymmetry, low  Total.tau and CSF.Alpha.synuclein (abeta 42 is not that important)
#Those with low asymmetry, high  Total.tau and CSF.Alpha.synuclein (abeta 42 is not that important)
#From PC3
#Those with low asymmetry, low  Total.tau and CSF.Alpha.synuclein (abeta 42 is not that important)
#Those with high asymmetry, high  Total.tau and CSF.Alpha.synuclein (abeta 42 is not that important)
#another interpretation is that any vector that isn't in the first few PCS can be ignored, as they represent a small populaiton of the data
#for biospecimen data, we choose 5 because after 6 each PC holds less than the average amount of information (the ei
#genvalue is less than 1)
rm(list = ls())
library(ggplot2)
library(gplots)
library(rgl)
library(lattice)
library(sjPlot)
library(fpc)
library(mclust)
library(cluster)
setwd("~/Dropbox//ORIE 4740 - Final Project/PCA_Clustering/Biospecimen_Imaging_Clustering/")
ppmi.raw.data.csv = read.csv("NMIB_AverageValues.csv") #use average values
ppmi.raw.data = ppmi.raw.data.csv
#adding ratio data
t.tau.Abeta.42.ratio = ppmi.raw.data$Total.tau/ppmi.raw.data$Abeta.42
p.tau.Abeta.42.ratio = ppmi.raw.data$p.Tau181P/ppmi.raw.data$Abeta.42
p.tau.t.tau.ratio = ppmi.raw.data$p.Tau181P/ppmi.raw.data$Total.tau
ppmi.raw.data = data.frame(ppmi.raw.data,
t.tau.Abeta.42.ratio,
p.tau.Abeta.42.ratio,
p.tau.t.tau.ratio)
#selecting PD patients
ppmi.raw.data = ppmi.raw.data[ppmi.raw.data$RECRUITMENT_CAT == 'PD',]
ppmi.biospecimen.imaging.data = subset.data.frame(ppmi.raw.data, select = c(CAUDATE_R,
CAUDATE_L,
PUTAMEN_R,
PUTAMEN_L,
CAUDATE_ASYMMETRY,
PUTAMEN_ASYMMETRY,
Abeta.42,
p.Tau181P,
Total.tau,
CSF.Alpha.synuclein,
t.tau.Abeta.42.ratio,
p.tau.Abeta.42.ratio,
p.tau.t.tau.ratio))
#perform PCA
ppmi.biospec.imaging.PCA = prcomp(ppmi.biospecimen.imaging.data,scale=TRUE)
plot(ppmi.biospec.imaging.PCA,
type = "line",
main = "Variances of each PCA loading")
sjp.pca(ppmi.biospec.imaging.PCA,
plotEigenvalues = TRUE,
type = "tile")
# Model Based Clustering --------------------------------------------------
model_fit = Mclust(ppmi.biospec.imaging.PCA$x[,c(1:5)])
plot(model_fit)
mydata = ppmi.biospec.imaging.PCA$x[,c(1:5)]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
mydata = ppmi.biospec.imaging.PCA$x[,c(1:5)]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(mydata,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Biospecimen_Imaging_Clustering/BiospecimenPCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Biospecimen_Imaging_Clustering/BiospecimenPCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/UPDRSPART3_Biospecimen_ImagingPCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/UPDRSPART3_Biospecimen_ImagingPCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/UPDRSPART3_Biospecimen_ImagingPCA.R')
model_fit = Mclust(mydata)
plot(mydata)
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/UPDRSPART3_Biospecimen_ImagingPCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Biospecimen_Imaging_Clustering/BiospecimenPCA.R')
#Apply PCA to UPDRS Part 3 Motor Data AND Imaging Data
rm(list = ls())
library(ggplot2)
library(gplots)
library(rgl)
library(lattice)
library(sjPlot)
library(fpc)
library(mclust)
library(cluster)
setwd("~/Dropbox//ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/")
ppmi.raw.data.csv = read.csv("NMIB_AverageValues.csv") #use average values
ppmi.raw.data = ppmi.raw.data.csv
#adding ratio data
t.tau.Abeta.42.ratio = ppmi.raw.data$Total.tau/ppmi.raw.data$Abeta.42
p.tau.Abeta.42.ratio = ppmi.raw.data$p.Tau181P/ppmi.raw.data$Abeta.42
p.tau.t.tau.ratio = ppmi.raw.data$p.Tau181P/ppmi.raw.data$Total.tau
ppmi.raw.data = data.frame(ppmi.raw.data,
t.tau.Abeta.42.ratio,
p.tau.Abeta.42.ratio,
p.tau.t.tau.ratio)
#selecting PD patients
ppmi.raw.data = ppmi.raw.data[ppmi.raw.data$RECRUITMENT_CAT == 'PD',]
# #assuming that all UPDRSPart3 data is in the columns between NP3SPCH and NUPDRS_TOT
# ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
#                                         c(which(names(ppmi.raw.data) %in% "NP3SPCH"):which(names(ppmi.raw.data) %in% "NUPDRS_TOT"))]
# getting all columns from UDPRS part 3 -----------------------------------
NP3FieldNames = names(ppmi.raw.data)[substr(names(ppmi.raw.data),1,3) == 'NP3']
# ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
#                                         c(which(names(ppmi.raw.data) %in% "NP3SPCH"):which(names(ppmi.raw.data) %in% "NP3RTCON"))]
ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
NP3FieldNames]
# Adding bio data ---------------------------------------------------------
#
# ppmi.biospecimen.imaging.data = subset.data.frame(ppmi.raw.data, select = c(CAUDATE_R,
#                                                                             CAUDATE_L,
#                                                                             PUTAMEN_R,
#                                                                             PUTAMEN_L,
#                                                                             CAUDATE_ASYMMETRY,
#                                                                             PUTAMEN_ASYMMETRY))
#
ppmi.biospecimen.imaging.data = subset.data.frame(ppmi.raw.data, select = c(CAUDATE_R,
CAUDATE_L,
PUTAMEN_R,
PUTAMEN_L,
CAUDATE_ASYMMETRY,
PUTAMEN_ASYMMETRY,
Abeta.42,
p.Tau181P,
Total.tau,
CSF.Alpha.synuclein,
t.tau.Abeta.42.ratio,
p.tau.Abeta.42.ratio,
p.tau.t.tau.ratio))
ppmi.NUPDRS3.Biospecimen.Imaging.data = data.frame(ppmi.motor.NUPDRS3.data,
ppmi.biospecimen.imaging.data)
# Performing PCA ----------------------------------------------------------
ppmi.NUPDRS3.Biospecimen.Imaging.pca = prcomp(ppmi.NUPDRS3.Biospecimen.Imaging.data,scale = TRUE)
sjp.pca(ppmi.NUPDRS3.Biospecimen.Imaging.data,
plotEigenvalues = TRUE,
type = "circle")
mydata = ppmi.NUPDRS3.Biospecimen.Imaging.pca$x[,c(1:11)]
model_fit = Mclust(mydata)
plot(mydata)
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Biospecimen_Imaging_Clustering/BiospecimenPCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/UPDRSPART3_Biospecimen_ImagingPCA.R')
plot(mydata)
summary(mydata)
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Biospecimen_Imaging_Clustering/BiospecimenPCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/UPDRSPART3_Biospecimen_ImagingPCA.R')
ppmi.NUPDRS3.Biospecimen.Imaging.pca
mydata = ppmi.NUPDRS3.Biospecimen.Imaging.pca$x[,c(1:5)]
head(mydata)
ppmi.NUPDRS3.Biospecimen.Imaging.data[,1]
ppmi.NUPDRS3.Biospecimen.Imaging.data[1,]
ppmi.NUPDRS3.Biospecimen.Imaging.data[2,]
ppmi.NUPDRS3.Biospecimen.Imaging.data
head(ppmi.NUPDRS3.Biospecimen.Imaging.data)
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Biospecimen_Imaging_Clustering/BiospecimenPCA.R')
ppmi.biospecimen.imaging.data[1,]
ppmi.biospecimen.imaging.data[3,]
ppmi.biospecimen.imaging.data[(1:5),]
ppmi.biospecimen.imaging.data[1,1]
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/UPDRSPART3_Biospecimen_ImagingPCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Biospecimen_Imaging_Clustering/BiospecimenPCA.R')
ppmi.NUPDRS3.Biospecimen.Imaging.pca = prcomp(ppmi.NUPDRS3.Biospecimen.Imaging.data,scale = TRUE)
rm(list = ls())
library(ggplot2)
library(gplots)
library(rgl)
library(lattice)
library(sjPlot)
library(fpc)
library(mclust)
library(cluster)
setwd("~/Dropbox//ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/")
ppmi.raw.data.csv = read.csv("NMIB_AverageValues.csv") #use average values
ppmi.raw.data = ppmi.raw.data.csv
#adding ratio data
t.tau.Abeta.42.ratio = ppmi.raw.data$Total.tau/ppmi.raw.data$Abeta.42
p.tau.Abeta.42.ratio = ppmi.raw.data$p.Tau181P/ppmi.raw.data$Abeta.42
p.tau.t.tau.ratio = ppmi.raw.data$p.Tau181P/ppmi.raw.data$Total.tau
ppmi.raw.data = data.frame(ppmi.raw.data,
t.tau.Abeta.42.ratio,
p.tau.Abeta.42.ratio,
p.tau.t.tau.ratio)
#selecting PD patients
ppmi.raw.data = ppmi.raw.data[ppmi.raw.data$RECRUITMENT_CAT == 'PD',]
# #assuming that all UPDRSPart3 data is in the columns between NP3SPCH and NUPDRS_TOT
# ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
#                                         c(which(names(ppmi.raw.data) %in% "NP3SPCH"):which(names(ppmi.raw.data) %in% "NUPDRS_TOT"))]
# getting all columns from UDPRS part 3 -----------------------------------
NP3FieldNames = names(ppmi.raw.data)[substr(names(ppmi.raw.data),1,3) == 'NP3']
# ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
#                                         c(which(names(ppmi.raw.data) %in% "NP3SPCH"):which(names(ppmi.raw.data) %in% "NP3RTCON"))]
ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
NP3FieldNames]
# Adding bio data ---------------------------------------------------------
#
# ppmi.biospecimen.imaging.data = subset.data.frame(ppmi.raw.data, select = c(CAUDATE_R,
#                                                                             CAUDATE_L,
#                                                                             PUTAMEN_R,
#                                                                             PUTAMEN_L,
#                                                                             CAUDATE_ASYMMETRY,
#                                                                             PUTAMEN_ASYMMETRY))
#
ppmi.biospecimen.imaging.data = subset.data.frame(ppmi.raw.data, select = c(CAUDATE_R,
CAUDATE_L,
PUTAMEN_R,
PUTAMEN_L,
CAUDATE_ASYMMETRY,
PUTAMEN_ASYMMETRY,
Abeta.42,
p.Tau181P,
Total.tau,
CSF.Alpha.synuclein,
t.tau.Abeta.42.ratio,
p.tau.Abeta.42.ratio,
p.tau.t.tau.ratio))
ppmi.NUPDRS3.Biospecimen.Imaging.data = data.frame(ppmi.motor.NUPDRS3.data,
ppmi.biospecimen.imaging.data)
ppmi.NUPDRS3.Biospecimen.Imaging.pca = prcomp(ppmi.NUPDRS3.Biospecimen.Imaging.data,scale = TRUE)
mydata = ppmi.NUPDRS3.Biospecimen.Imaging.pca$x[,c(1:4)]
# model based clustering on the first 11 components -----------------------
model_fit = Mclust(mydata)
plot(mydata)
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/UPDRSPART3_Biospecimen_ImagingPCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/UPDRSPART3_Biospecimen_ImagingPCA.R')
#Apply PCA to UPDRS Part 3 Motor Data
rm(list = ls())
library(ggplot2)
library(gplots)
library(rgl)
library(lattice)
library(sjPlot)
library(fpc)
library(mclust)
library(cluster))
setwd("~/Dropbox//ORIE 4740 - Final Project/PCA_Clustering/Motor_Clustering/")
ppmi.raw.data.csv = read.csv("NMIB_AverageValues.csv") #use average values
ppmi.raw.data = ppmi.raw.data.csv
#selecting PD patients
ppmi.raw.data = ppmi.raw.data[ppmi.raw.data$RECRUITMENT_CAT == 'PD',]
#assuming that all UPDRSPart3 data is in the columns between NP3SPCH and NUPDRS_TOT
# ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
#                                 c(which(names(ppmi.raw.data) %in% "NP3SPCH"):which(names(ppmi.raw.data) %in% "NUPDRS_TOT"))]
ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
c(which(names(ppmi.raw.data) %in% "NP3SPCH"):which(names(ppmi.raw.data) %in% "NP3RTALL"))]
ppmi.motor.NUPDRS3.pca = prcomp(ppmi.motor.NUPDRS3.data,scale = TRUE)
sjp.pca(ppmi.motor.NUPDRS3.pca,
plotEigenvalues = TRUE,
type = "circle")
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Clustering/UPDRSPART3PCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Clustering/UPDRSPART3PCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Clustering/UPDRSPART3PCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Biospecimen_Imaging_Clustering/BiospecimenPCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Biospecimen_Imaging_Clustering/UPDRSPART3_Biospecimen_ImagingPCA.R')
ppmi.nonmotor.biospecimen.imaging.pca = prcomp(ppmi.nonmotor.biospecimen.imaging.data,scale = TRUE)
ppmi.nonmotor.biospecimen.imaging.data = data.frame(ppmi.nonmotor.data,
ppmi.biospecimen.imaging.data)
#Apply PCA to non-motor, biospecimen, and imaging data
rm(list = ls())
library(ggplot2)
library(gplots)
library(rgl)
library(lattice)
library(sjPlot)
library(fpc)
library(mclust)
library(cluster)
setwd("~/Dropbox//ORIE 4740 - Final Project/PCA_Clustering/NonMotor_Biospecimen_Imaging_Clustering//")
ppmi.raw.data.csv = read.csv("NMIB_AverageValues.csv") #use average values
ppmi.raw.data = ppmi.raw.data.csv
#adding ratio data
t.tau.Abeta.42.ratio = ppmi.raw.data$Total.tau/ppmi.raw.data$Abeta.42
p.tau.Abeta.42.ratio = ppmi.raw.data$p.Tau181P/ppmi.raw.data$Abeta.42
p.tau.t.tau.ratio = ppmi.raw.data$p.Tau181P/ppmi.raw.data$Total.tau
ppmi.raw.data = data.frame(ppmi.raw.data,
t.tau.Abeta.42.ratio,
p.tau.Abeta.42.ratio,
p.tau.t.tau.ratio)
#selecting PD patients
ppmi.raw.data = ppmi.raw.data[ppmi.raw.data$RECRUITMENT_CAT == 'PD',]
ppmi.nonmotor.data = subset.data.frame(ppmi.raw.data,select = c(JLO_TOTRAW,
ESSTOTAL,
GDTOTAL,
DVT_TOTAL_RECALL,
DVT_DELAYED_RECALL,
DVT_RETENTION,
DVT_RECOG_DISC_INDEX,
LNS_TOTRAW,
MCATOT,
REMSLEEPTOTAL,
DVT_SFTANIM,
DVT_SDM,
SCOPATOTAL,
UPSITTOTAL
))
ppmi.nonmotor.data = subset.data.frame(ppmi.raw.data,select = c(JLO_TOTRAW,
ESSTOTAL,
GDTOTAL,
DVT_TOTAL_RECALL,
DVT_DELAYED_RECALL,
DVT_RETENTION,
DVT_RECOG_DISC_INDEX,
LNS_TOTRAW,
MCATOT,
REMSLEEPTOTAL,
DVT_SFTANIM,
DVT_SDM,
SCOPATOTAL,
UPSITTOTAL
))
#assuming that all UPDRSPart3 data is in the columns between NP3SPCH and NUPDRS_TOT
ppmi.motor.NUPDRS3.data = ppmi.raw.data[,
c(which(names(ppmi.raw.data) %in% "NP3SPCH"):which(names(ppmi.raw.data) %in% "NUPDRS_TOT"))]
ppmi.motor.NUPDRS3.data = ppmi.motor.NUPDRS3.data[,-which(names(ppmi.raw.data) %in% "NUPDRS1_TOT")]
#selecting all imaging and biospecimen data
ppmi.biospecimen.imaging.data = subset.data.frame(ppmi.raw.data, select = c(CAUDATE_R,
CAUDATE_L,
PUTAMEN_R,
PUTAMEN_L,
CAUDATE_ASYMMETRY,
PUTAMEN_ASYMMETRY,
Abeta.42,
p.Tau181P,
Total.tau,
CSF.Alpha.synuclein,
t.tau.Abeta.42.ratio,
p.tau.Abeta.42.ratio,
p.tau.t.tau.ratio))
ppmi.nonmotor.biospecimen.imaging.data = data.frame(ppmi.nonmotor.data,
ppmi.biospecimen.imaging.data)
# Performing PCA ----------------------------------------------------------
ppmi.nonmotor.biospecimen.imaging.pca = prcomp(ppmi.nonmotor.biospecimen.imaging.data,scale = TRUE)
sjp.pca(ppmi.nonmotor.biospecimen.imaging.pca,
plotEigenvalues = TRUE,
type = "circle")
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/Motor_Clustering/UPDRSPART3PCA.R')
source('~/Dropbox/ORIE 4740 - Final Project/PCA_Clustering/NonMotor_Biospecimen_Imaging_Clustering/NonMotor_Biospecimen_Imaging_PCA.R')
